'Adcyap1' = 'navy',
'Tac2' = 'green',
'Penk' = 'gray',
'Sst' = 'yellowgreen',
'Trh' = 'powderblue'
)
location_colors <- c(
'LHA' = 'red',
'VMH' = 'green',
'AHN' = 'blue',
'PH' = 'cyan',
'PVH' = 'magenta',
'MBO' = 'yellow',
'TU' = 'brown',
'MPO' = 'maroon',
'DMH' = 'gray',
'ARH' = 'navy',
'MPN' = 'gold',
'PVHd' = 'skyblue',
'ZI' = 'orange',
'PMv' = 'pink',
'LPO' = 'turquoise',
'others' = 'powderblue'
)
ha = HeatmapAnnotation(
geno = dflabel$geno,
location = dflabel$location,
col = list(geno = geno_colors,location = location_colors),
annotation_legend_param = list(
geno = list(
title = "Geno",
at = names(geno_colors),
labels = names(geno_colors)
)
),
location = list(
title = "Location",
at = names(location_colors),
labels = names(location_colors)
# colors = location_colors
)
)
pdf("Figs 5.pdf", width = 16, height = 8)
ht = Heatmap(t(dfdata),col = col_fun,cluster_columns = dend_rows,
column_split = 38,show_column_names = FALSE,
row_split = t(dfcol),row_gap = unit(0.8, "mm"),
column_gap = unit(0.8, "mm"),border = TRUE,
cluster_rows = FALSE,top_annotation = ha)
draw(ht)
dev.off()
suppressPackageStartupMessages(library(ComplexHeatmap))
library(cluster)
suppressPackageStartupMessages(library(dendextend))
suppressPackageStartupMessages(library(circlize))
# col_fun = colorRamp2(c(0,2000), c("white","red")) # for fig1 f
col_fun = colorRamp2(c(0,60), c("white","red")) # for fig s5
# col_fun = colorRamp2(c(0,1000, 2000), c( "white","yellow", "red"))
col_fun(seq(-2, 2))
#for fig1 f
# dfdata = read.table("all_neurons_fig1_final_new.csv",row.names = "X",header = TRUE,sep = ",")
#for figs 5
dfdata = read.table("all_neurons_terminal_figS5.csv",row.names = "X",header = TRUE,sep = ",")
dfcol = read.table("all_neurons_plots_new.csv",row.names = "X",header = TRUE,sep = ",")
dflabel = read.table("labels_all.csv",row.names = "X",header = TRUE,sep = ",")
dfdist = read.table("distance_mean_pct.csv",row.names = "X",header = TRUE,sep = ",")
d = as.dist(dfdist)
dend_rows = as.dendrogram(hclust(d,"ward.D2"))
dflabel$geno <- as.factor(dflabel$geno)
dflabel$location <- as.factor(dflabel$location)
geno_colors <- c(
'Pomc' = 'red',
'Oxt' = 'orange',
'Avp' = 'yellow',
'Wt(orexin)' = 'pink',
'Agrp' = 'purple',
'Vip' = 'magenta',
'Pmch' = 'brown',
'Crh' = 'gold',
'Nts' = 'blue',
'Tac1' = 'cyan',
'Pdyn' = 'skyblue',
'Adcyap1' = 'navy',
'Tac2' = 'green',
'Penk' = 'gray',
'Sst' = 'yellowgreen',
'Trh' = 'powderblue'
)
location_colors <- c(
'LHA' = 'red',
'VMH' = 'green',
'AHN' = 'blue',
'PH' = 'cyan',
'PVH' = 'magenta',
'MBO' = 'yellow',
'TU' = 'brown',
'MPO' = 'maroon',
'DMH' = 'gray',
'ARH' = 'navy',
'MPN' = 'gold',
'PVHd' = 'skyblue',
'ZI' = 'orange',
'PMv' = 'pink',
'LPO' = 'turquoise',
'others' = 'powderblue'
)
ha = HeatmapAnnotation(
geno = dflabel$geno,
location = dflabel$location,
col = list(geno = geno_colors,location = location_colors),
annotation_legend_param = list(
geno = list(
title = "Geno",
at = names(geno_colors),
labels = names(geno_colors)
)
),
location = list(
title = "Location",
at = names(location_colors),
labels = names(location_colors)
# colors = location_colors
)
)
pdf("Fig s5.pdf", width = 16, height = 8)
ht = Heatmap(t(dfdata),col = col_fun,cluster_columns = dend_rows,
column_split = 38,show_column_names = FALSE,
row_split = t(dfcol),row_gap = unit(0.8, "mm"),
column_gap = unit(0.8, "mm"),border = TRUE,
cluster_rows = FALSE,top_annotation = ha)
draw(ht)
dev.off()
setwd("W:/20231213_fig_code/fig 4f")
col_fun = colorRamp2(c(0,2000), c("white","red"))
suppressPackageStartupMessages(library(ComplexHeatmap))
library(cluster)
suppressPackageStartupMessages(library(dendextend))
suppressPackageStartupMessages(library(circlize))
col_fun = colorRamp2(c(0,2000), c("white","red"))
# col_fun = colorRamp2(c(0,1000, 2000), c( "white","yellow", "red"))
col_fun(seq(-2, 2))
dfdata = read.table("orexin_data_new.csv",row.names = "X",header = TRUE,sep = ",")
dfcol = read.table("orexin_plots_use.csv",row.names = "X",header = TRUE,sep = ",")
dfdist = read.table("orexin_matrix.csv",row.names = "X",header = TRUE,sep = ",")
d = as.dist(dfdist)
dend_rows = as.dendrogram(hclust(d,"ward.D2"))
pdf("heatmap53.pdf", width = 27, height = 16)
ht = Heatmap(t(dfdata),col = col_fun,cluster_columns = dend_rows,
column_split = 5,show_column_names = FALSE,
row_split = t(dfcol),row_gap = unit(0.8, "mm"),
column_gap = unit(0.8, "mm"),border = TRUE,
cluster_rows = FALSE)
draw(ht)
dev.off()
suppressPackageStartupMessages(library(ComplexHeatmap))
library(cluster)
suppressPackageStartupMessages(library(dendextend))
suppressPackageStartupMessages(library(circlize))
col_fun = colorRamp2(c(0,2000), c("white","red"))
# col_fun = colorRamp2(c(0,1000, 2000), c( "white","yellow", "red"))
col_fun(seq(-2, 2))
dfdata = read.table("orexin_data_new.csv",row.names = "X",header = TRUE,sep = ",")
dfcol = read.table("orexin_plots_use.csv",row.names = "X",header = TRUE,sep = ",")
dfdist = read.table("orexin_matrix.csv",row.names = "X",header = TRUE,sep = ",")
d = as.dist(dfdist)
dend_rows = as.dendrogram(hclust(d,"ward.D2"))
pdf("heatmap5.pdf", width = 14, height = 16)
ht = Heatmap(t(dfdata),col = col_fun,cluster_columns = dend_rows,
column_split = 5,show_column_names = FALSE,
row_split = t(dfcol),row_gap = unit(0.8, "mm"),
column_gap = unit(0.8, "mm"),border = TRUE,
cluster_rows = FALSE)
draw(ht)
dev.off()
suppressPackageStartupMessages(library(ComplexHeatmap))
library(cluster)
suppressPackageStartupMessages(library(dendextend))
suppressPackageStartupMessages(library(circlize))
col_fun = colorRamp2(c(0,2000), c("white","red"))
# col_fun = colorRamp2(c(0,1000, 2000), c( "white","yellow", "red"))
col_fun(seq(-2, 2))
dfdata = read.table("orexin_data_new.csv",row.names = "X",header = TRUE,sep = ",")
dfcol = read.table("orexin_plots_use.csv",row.names = "X",header = TRUE,sep = ",")
dfdist = read.table("orexin_matrix.csv",row.names = "X",header = TRUE,sep = ",")
d = as.dist(dfdist)
dend_rows = as.dendrogram(hclust(d,"ward.D2"))
pdf("fig4f.pdf", width = 13, height = 16)
ht = Heatmap(t(dfdata),col = col_fun,cluster_columns = dend_rows,
column_split = 5,show_column_names = FALSE,
row_split = t(dfcol),row_gap = unit(0.8, "mm"),
column_gap = unit(0.8, "mm"),border = TRUE,
cluster_rows = FALSE)
draw(ht)
dev.off()
setwd("W:/20231213_fig_code/fig1f")
suppressPackageStartupMessages(library(ComplexHeatmap))
library(cluster)
suppressPackageStartupMessages(library(dendextend))
suppressPackageStartupMessages(library(circlize))
# col_fun = colorRamp2(c(0,2000), c("white","red")) # for fig1 f
col_fun = colorRamp2(c(0,60), c("white","red")) # for fig s5
# col_fun = colorRamp2(c(0,1000, 2000), c( "white","yellow", "red"))
col_fun(seq(-2, 2))
#for fig1 f
# dfdata = read.table("all_neurons_fig1_final_new.csv",row.names = "X",header = TRUE,sep = ",")
#for figs 5
dfdata = read.table("all_neurons_terminal_figS5.csv",row.names = "X",header = TRUE,sep = ",")
dfcol = read.table("all_neurons_plots_new.csv",row.names = "X",header = TRUE,sep = ",")
dflabel = read.table("labels_all.csv",row.names = "X",header = TRUE,sep = ",")
dfdist = read.table("distance_mean_pct.csv",row.names = "X",header = TRUE,sep = ",")
d = as.dist(dfdist)
dend_rows = as.dendrogram(hclust(d,"ward.D2"))
dflabel$geno <- as.factor(dflabel$geno)
dflabel$location <- as.factor(dflabel$location)
geno_colors <- c(
'Pomc' = 'red',
'Oxt' = 'orange',
'Avp' = 'yellow',
'Wt(orexin)' = 'pink',
'Agrp' = 'purple',
'Vip' = 'magenta',
'Pmch' = 'brown',
'Crh' = 'gold',
'Nts' = 'blue',
'Tac1' = 'cyan',
'Pdyn' = 'skyblue',
'Adcyap1' = 'navy',
'Tac2' = 'green',
'Penk' = 'gray',
'Sst' = 'yellowgreen',
'Trh' = 'powderblue'
)
location_colors <- c(
'LHA' = 'red',
'VMH' = 'green',
'AHN' = 'blue',
'PH' = 'cyan',
'PVH' = 'magenta',
'MBO' = 'yellow',
'TU' = 'brown',
'MPO' = 'maroon',
'DMH' = 'gray',
'ARH' = 'navy',
'MPN' = 'gold',
'PVHd' = 'skyblue',
'ZI' = 'orange',
'PMv' = 'pink',
'LPO' = 'turquoise',
'others' = 'powderblue'
)
ha = HeatmapAnnotation(
geno = dflabel$geno,
location = dflabel$location,
col = list(geno = geno_colors,location = location_colors),
annotation_legend_param = list(
geno = list(
title = "Geno",
at = names(geno_colors),
labels = names(geno_colors)
)
),
location = list(
title = "Location",
at = names(location_colors),
labels = names(location_colors)
# colors = location_colors
)
)
pdf("Fig s5 new.pdf", width = 16, height = 8)
ht = Heatmap(t(dfdata),col = col_fun,cluster_columns = dend_rows,
column_split = 38,show_column_names = FALSE,
row_split = t(dfcol),row_gap = unit(0.8, "mm"),
column_gap = unit(0.8, "mm"),border = TRUE,
cluster_rows = True,top_annotation = ha)
draw(ht)
dev.off()
pdf("Fig s5 new.pdf", width = 16, height = 8)
ht = Heatmap(t(dfdata),col = col_fun,cluster_columns = dend_rows,
column_split = 38,show_column_names = FALSE,
row_split = t(dfcol),row_gap = unit(0.8, "mm"),
column_gap = unit(0.8, "mm"),border = TRUE,
cluster_rows = TRUE,top_annotation = ha)
draw(ht)
dev.off()
dfcol = read.table("all_neurons_plots_sort_area.csv",row.names = "X",header = TRUE,sep = ",")
pdf("Fig s5 new.pdf", width = 16, height = 8)
ht = Heatmap(t(dfdata),col = col_fun,cluster_columns = dend_rows,
column_split = 38,show_column_names = FALSE,
row_split = t(dfcol),row_gap = unit(0.8, "mm"),
column_gap = unit(0.8, "mm"),border = TRUE,
cluster_rows = FALSE,top_annotation = ha)
draw(ht)
dev.off()
View(dfcol)
View(dfcol)
suppressPackageStartupMessages(library(ComplexHeatmap))
library(cluster)
suppressPackageStartupMessages(library(dendextend))
suppressPackageStartupMessages(library(circlize))
# col_fun = colorRamp2(c(0,2000), c("white","red")) # for fig1 f
col_fun = colorRamp2(c(0,60), c("white","red")) # for fig s5
# col_fun = colorRamp2(c(0,1000, 2000), c( "white","yellow", "red"))
col_fun(seq(-2, 2))
#for fig1 f
# dfdata = read.table("all_neurons_fig1_final_new.csv",row.names = "X",header = TRUE,sep = ",")
#for figs 5
dfdata = read.table("all_neurons_terminal_figS5.csv",row.names = "X",header = TRUE,sep = ",")
dfcol = read.table("all_neurons_plots_sort_area.csv",row.names = "X",header = TRUE,sep = ",")
dflabel = read.table("labels_all.csv",row.names = "X",header = TRUE,sep = ",")
dfdist = read.table("distance_mean_pct.csv",row.names = "X",header = TRUE,sep = ",")
d = as.dist(dfdist)
dend_rows = as.dendrogram(hclust(d,"ward.D2"))
dflabel$geno <- as.factor(dflabel$geno)
dflabel$location <- as.factor(dflabel$location)
geno_colors <- c(
'Pomc' = 'red',
'Oxt' = 'orange',
'Avp' = 'yellow',
'Wt(orexin)' = 'pink',
'Agrp' = 'purple',
'Vip' = 'magenta',
'Pmch' = 'brown',
'Crh' = 'gold',
'Nts' = 'blue',
'Tac1' = 'cyan',
'Pdyn' = 'skyblue',
'Adcyap1' = 'navy',
'Tac2' = 'green',
'Penk' = 'gray',
'Sst' = 'yellowgreen',
'Trh' = 'powderblue'
)
location_colors <- c(
'LHA' = 'red',
'VMH' = 'green',
'AHN' = 'blue',
'PH' = 'cyan',
'PVH' = 'magenta',
'MBO' = 'yellow',
'TU' = 'brown',
'MPO' = 'maroon',
'DMH' = 'gray',
'ARH' = 'navy',
'MPN' = 'gold',
'PVHd' = 'skyblue',
'ZI' = 'orange',
'PMv' = 'pink',
'LPO' = 'turquoise',
'others' = 'powderblue'
)
ha = HeatmapAnnotation(
geno = dflabel$geno,
location = dflabel$location,
col = list(geno = geno_colors,location = location_colors),
annotation_legend_param = list(
geno = list(
title = "Geno",
at = names(geno_colors),
labels = names(geno_colors)
)
),
location = list(
title = "Location",
at = names(location_colors),
labels = names(location_colors)
# colors = location_colors
)
)
pdf("Fig s5 new.pdf", width = 16, height = 8)
ht = Heatmap(t(dfdata),col = col_fun,cluster_columns = dend_rows,
column_split = 38,show_column_names = FALSE,
row_split = t(dfcol),row_gap = unit(0.8, "mm"),
column_gap = unit(0.8, "mm"),border = TRUE,
cluster_rows = FALSE,top_annotation = ha)
draw(ht)
dev.off()
suppressPackageStartupMessages(library(ComplexHeatmap))
library(cluster)
suppressPackageStartupMessages(library(dendextend))
suppressPackageStartupMessages(library(circlize))
# col_fun = colorRamp2(c(0,2000), c("white","red")) # for fig1 f
col_fun = colorRamp2(c(0,60), c("white","red")) # for fig s5
# col_fun = colorRamp2(c(0,1000, 2000), c( "white","yellow", "red"))
col_fun(seq(-2, 2))
#for fig1 f
# dfdata = read.table("all_neurons_fig1_final_new.csv",row.names = "X",header = TRUE,sep = ",")
#for figs 5
dfdata = read.table("all_neurons_terminal_figS5_sort.csv",row.names = "X",header = TRUE,sep = ",")
dfcol = read.table("all_neurons_plots_sort_area.csv",row.names = "X",header = TRUE,sep = ",")
dflabel = read.table("labels_all.csv",row.names = "X",header = TRUE,sep = ",")
dfdist = read.table("distance_mean_pct.csv",row.names = "X",header = TRUE,sep = ",")
d = as.dist(dfdist)
dend_rows = as.dendrogram(hclust(d,"ward.D2"))
dflabel$geno <- as.factor(dflabel$geno)
dflabel$location <- as.factor(dflabel$location)
geno_colors <- c(
'Pomc' = 'red',
'Oxt' = 'orange',
'Avp' = 'yellow',
'Wt(orexin)' = 'pink',
'Agrp' = 'purple',
'Vip' = 'magenta',
'Pmch' = 'brown',
'Crh' = 'gold',
'Nts' = 'blue',
'Tac1' = 'cyan',
'Pdyn' = 'skyblue',
'Adcyap1' = 'navy',
'Tac2' = 'green',
'Penk' = 'gray',
'Sst' = 'yellowgreen',
'Trh' = 'powderblue'
)
location_colors <- c(
'LHA' = 'red',
'VMH' = 'green',
'AHN' = 'blue',
'PH' = 'cyan',
'PVH' = 'magenta',
'MBO' = 'yellow',
'TU' = 'brown',
'MPO' = 'maroon',
'DMH' = 'gray',
'ARH' = 'navy',
'MPN' = 'gold',
'PVHd' = 'skyblue',
'ZI' = 'orange',
'PMv' = 'pink',
'LPO' = 'turquoise',
'others' = 'powderblue'
)
ha = HeatmapAnnotation(
geno = dflabel$geno,
location = dflabel$location,
col = list(geno = geno_colors,location = location_colors),
annotation_legend_param = list(
geno = list(
title = "Geno",
at = names(geno_colors),
labels = names(geno_colors)
)
),
location = list(
title = "Location",
at = names(location_colors),
labels = names(location_colors)
# colors = location_colors
)
)
pdf("Fig s5 new.pdf", width = 16, height = 8)
ht = Heatmap(t(dfdata),col = col_fun,cluster_columns = dend_rows,
column_split = 31,show_column_names = FALSE,
row_split = t(dfcol),row_gap = unit(0.8, "mm"),
column_gap = unit(0.8, "mm"),border = TRUE,
cluster_rows = FALSE,top_annotation = ha)
draw(ht)
dev.off()
#for figs 5
dfdata = read.table("all_neurons_fig1_final_new_sort.csv",row.names = "X",header = TRUE,sep = ",")
col_fun = colorRamp2(c(0,2000), c("white","red")) # for fig1 f
pdf("Fig 1f new.pdf", width = 16, height = 8)
ht = Heatmap(t(dfdata),col = col_fun,cluster_columns = dend_rows,
column_split = 31,show_column_names = FALSE,
row_split = t(dfcol),row_gap = unit(0.8, "mm"),
column_gap = unit(0.8, "mm"),border = TRUE,
cluster_rows = FALSE,top_annotation = ha)
draw(ht)
dev.off()
setwd("W:/20231213_fig_code/fig4f")
suppressPackageStartupMessages(library(ComplexHeatmap))
library(cluster)
suppressPackageStartupMessages(library(dendextend))
suppressPackageStartupMessages(library(circlize))
col_fun = colorRamp2(c(0,2000), c("white","red"))
# col_fun = colorRamp2(c(0,1000, 2000), c( "white","yellow", "red"))
col_fun(seq(-2, 2))
dfdata = read.table("orexin_data_new_sort.csv",row.names = "X",header = TRUE,sep = ",")
dfcol = read.table("orexin_plots_sort.csv",row.names = "X",header = TRUE,sep = ",")
dfdist = read.table("orexin_matrix.csv",row.names = "X",header = TRUE,sep = ",")
d = as.dist(dfdist)
dend_rows = as.dendrogram(hclust(d,"ward.D2"))
pdf("fig4f_new.pdf", width = 27, height = 16)
ht = Heatmap(t(dfdata),col = col_fun,cluster_columns = dend_rows,
column_split = 5,show_column_names = FALSE,
row_split = t(dfcol),row_gap = unit(0.8, "mm"),
column_gap = unit(0.8, "mm"),border = TRUE,
cluster_rows = FALSE)
draw(ht)
dev.off()
pdf("fig4f_new.pdf", width = 9, height = 15)
ht = Heatmap(t(dfdata),col = col_fun,cluster_columns = dend_rows,
column_split = 5,show_column_names = FALSE,
row_split = t(dfcol),row_gap = unit(0.8, "mm"),
column_gap = unit(0.8, "mm"),border = TRUE,
cluster_rows = FALSE)
draw(ht)
dev.off()
pdf("fig4f_new.pdf", width = 9, height = 11)
ht = Heatmap(t(dfdata),col = col_fun,cluster_columns = dend_rows,
column_split = 5,show_column_names = FALSE,
row_split = t(dfcol),row_gap = unit(0.8, "mm"),
column_gap = unit(0.8, "mm"),border = TRUE,
cluster_rows = FALSE)
draw(ht)
dev.off()
pdf("fig4f_new.pdf", width = 9, height = 9)
ht = Heatmap(t(dfdata),col = col_fun,cluster_columns = dend_rows,
column_split = 5,show_column_names = FALSE,
row_split = t(dfcol),row_gap = unit(0.8, "mm"),
column_gap = unit(0.8, "mm"),border = TRUE,
cluster_rows = FALSE)
draw(ht)
dev.off()
